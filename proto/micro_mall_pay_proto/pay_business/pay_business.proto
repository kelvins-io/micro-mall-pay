syntax = "proto3";

package pay_business;

import "gitee.com/kelvins-io/common/proto/google/api/annotations.proto";

// 支付业务
service PayBusinessService {
    // 统一收单支付
    rpc TradePay(TradePayRequest) returns (TradePayResponse) {
        option (google.api.http) = {
            post: "/v1/trade/pay"
            body:"*"
        };
    }
//    // 统一收单查询
//    rpc TradeQuery(TradeQueryRequest) returns (TradeQueryResponse) {
//        option (google.api.http) = {
//            post: "/v1/trade/query"
//            body:"*"
//        };
//    }
//    // 收单取消
//    rpc TradeCancel(TradeCancelRequest) returns (TradeCancelResponse) {
//        option (google.api.http) = {
//            put: "/v1/trade/cancel"
//            body:"*"
//        };
//    }
//    // 统一收单退款接口
//    rpc TradeRefund(TradeRefundRequest) returns (TradeRefundResponse) {
//        option (google.api.http) = {
//            put: "/v1/trade/cancel/query"
//            body:"*"
//        };
//    }
}

enum RetCode {
    SUCCESS = 0;
    ERROR = 500;
    USER_NOT_EXIST = 50001;
    USER_EXIST = 50002;
    MERCHANT_NOT_EXIST = 50003;
    MERCHANT_EXIST = 50004;
    SHOP_NOT_EXIST = 50005;
    SHOP_EXIST = 50006;
    SKU_NOT_EXIST = 50007;
    SKU_EXIST = 50008;
    SKU_AMOUNT_NOT_ENOUGH = 50009;
    USER_BALANCE_NOT_ENOUGH = 600000;
    MERCHANT_BALANCE_NOT_ENOUGH = 6000001;
    ACCOUNT_LOCK = 6000002;
}

enum OperationType {
    CREATE = 0;
    UPDATE = 1;
    DELETE = 2;
    AUDIT = 3;
    PUT_AWAY = 4;
}

enum CoinType {
    CNY = 0;
    USD = 1;
}

message CommonResponse {
    RetCode code = 1;
    string msg = 2;
}

message TradePayRequest {
    string out_trade_no = 1; // 外部订单号
    string time_expire = 2; // 交易结束时间， 格式为 2018-06-08T10:34:56+08:00
    string notify_url = 3; // 交易通知地址， 通知URL必须为get请求，不携带body
    string description = 4; // 商品描述
    string merchant = 5; // 商户code
    string attach = 6; // 附加数据，在支付和查询body中原样返回
    string account = 7; // 用户code

    TradeGoodsDetail detail = 199;
}

message TradeGoodsDetail {
    int64 amount = 1; // 需要支付数量
    CoinType coin_type = 2; // 币种
    int64 reduction = 3; // 满减
}

message TradePayResponse {
    CommonResponse common = 1;
    string trade_id = 2; // 支付ID，客户端需要存储
}

message TradeRefundRequest {

}

message TradeRefundResponse {

}

message TradeQueryRequest {

}

message TradeQueryResponse {

}

message TradeCancelRequest {

}

message TradeCancelResponse {

}

